{"version":3,"sources":["webpack:///./client/app/app.component.html","webpack:///./client/app/app.component.scss","webpack:///./client/app/app.component.ts","webpack:///./client/app/app.module.ts","webpack:///./client/app/services/message.service.ts","webpack:///./client/app/tokens.ts","webpack:///./client/main-jit.ts","webpack:///./client/scss/styles.scss","webpack:///./node_modules/simple-subject-observer/index.js","webpack:///./node_modules/simple-subject-observer/lib/simple-observable.js","webpack:///./node_modules/simple-subject-observer/lib/subscription-token.js"],"names":[],"mappings":"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","file":"app.7a966c9609fac3251baf.js","sourcesContent":["module.exports = \"<main>\\n  <h1>SimpleObservable</h1>\\n\\n  <!-- <img src=\\\"\\\"> -->\\n</main>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/app.component.html\n// module id = ./client/app/app.component.html\n// module chunks = app","module.exports = \"main {\\n  padding: 1em;\\n  font-family: Arial, Helvetica, sans-serif;\\n  text-align: center;\\n  display: block; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/app.component.scss\n// module id = ./client/app/app.component.scss\n// module chunks = app","import { Component } from '@angular/core'\nimport { Inject } from '@angular/core'\n\nimport { APP_MESSAGES } from './tokens'\n\nimport { MessageService } from './services/message.service'\n\nimport '../scss/styles.scss'\n\n@Component({\n  selector: 'my-app',\n  template: require('./app.component.html'),\n  styles: [require('./app.component.scss')],\n  providers: [\n    { provide: APP_MESSAGES, useClass: MessageService }\n  ]\n})\nexport class AppComponent {\n  constructor(@Inject(APP_MESSAGES) private messageService: MessageService) {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader??ref--5!./client/app/app.component.ts","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { APP_MESSAGES } from './tokens'\n\nimport { MessageService } from './services/message.service'\n\nimport { AppComponent } from './app.component'\n\n@NgModule({\n  imports: [ BrowserModule ],\n  declarations: [ AppComponent ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader??ref--5!./client/app/app.module.ts","import * as SimpleObservable from 'simple-subject-observer'\nimport { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs/Subject'\nimport { Subscription } from 'rxjs/Subscription'\nimport 'rxjs/add/operator/filter'\nimport 'rxjs/add/operator/map'\n\nconst so = new SimpleObservable()\nconsole.log(so)\n\nexport interface IMessage {\n  type: string\n  payload: any\n}\n\nexport type MessageCallback = (payload: any) => void\n\n@Injectable()\nexport class MessageService {\n  private handler: Subject<IMessage>\n\n  constructor() {\n    this.handler = new Subject<IMessage>()\n  }\n\n  public broadcast(type: string, payload: any) {\n    this.handler.next({ type, payload })\n  }\n\n  public subscribe(type: string, callback: MessageCallback): Subscription {\n    return this.handler\n      .filter((message) => message.type === type)\n      .map((message) => message.payload)\n      .subscribe(callback)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader??ref--5!./client/app/services/message.service.ts","import { InjectionToken } from '@angular/core'\n\nexport const APP_MESSAGES = new InjectionToken('app.messages')\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader??ref--5!./client/app/tokens.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\nimport { enableProdMode } from '@angular/core'\nimport { AppModule } from './app/app.module'\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./node_modules/tslint-loader??ref--5!./client/main-jit.ts","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/scss/styles.scss\n// module id = ./client/scss/styles.scss\n// module chunks = app","module.exports = require('./lib/simple-observable').SimpleObservable\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/simple-subject-observer/index.js\n// module id = ./node_modules/simple-subject-observer/index.js\n// module chunks = app","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar subscription_token_1 = require(\"./subscription-token\");\n/**\n * A simple subject/observer pattern implementation. Observers can\n * subscribe and receive notifications when a specified event ocurrs.\n *\n * @export\n * @class SimpleObservable\n */\nvar SimpleObservable = (function () {\n    function SimpleObservable() {\n        this._observers = Object.create(null);\n        this._nextId = 0;\n    }\n    /**\n     *\n     *\n     * @param {TNotifyCallback} callback\n     * @returns {ISubscriptionToken}\n     * @memberof SimpleObservable\n     */\n    SimpleObservable.prototype.subscribe = function (callback) {\n        var id = this._nextId++;\n        this._observers[id] = callback;\n        return subscription_token_1.subscriptionToken(this._observers, id);\n    };\n    /**\n     * Notify observers and deliver a data payload\n     *\n     * @param {*} [payload=null] The data payload to deliver to subscribers\n     * @returns {this}\n     * @memberof SimpleObservable\n     */\n    SimpleObservable.prototype.notify = function (payload) {\n        if (payload === void 0) { payload = null; }\n        for (var id in this._observers) {\n            var callback = this._observers[id];\n            callback(payload, +id);\n        }\n        return this;\n    };\n    /**\n     * Notify observers asynchronously and deliver a data payload\n     *\n     * @param {*} [payload=null] The data payload to deliver to subscribers\n     * @returns {this}\n     * @memberof SimpleObservable\n     */\n    SimpleObservable.prototype.notifyAsync = function (payload) {\n        if (payload === void 0) { payload = null; }\n        for (var id in this._observers) {\n            var callback = this._observers[id];\n            setTimeout(executeCallbackFn(callback, payload, +id), 0);\n        }\n        return this;\n    };\n    return SimpleObservable;\n}());\nexports.SimpleObservable = SimpleObservable;\n/**\n * Helper for notifyAsync setTimeout calls\n * @function\n * @param {TNotifyCallback} callback\n * @param {*} payload\n * @param {number} id\n * @returns {() => void}\n */\nfunction executeCallbackFn(callback, payload, id) {\n    return function () {\n        callback(payload, id);\n    };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/simple-subject-observer/lib/simple-observable.js\n// module id = ./node_modules/simple-subject-observer/lib/simple-observable.js\n// module chunks = app","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generate and return an ISubscriptionToken\n *\n * @export\n * @param {IObservers} observers\n * @param {number} id\n * @returns {ISubscriptionToken}\n */\nfunction subscriptionToken(observers, id) {\n    return { id: id, unsubscribe: function () {\n            delete observers[id];\n        } };\n}\nexports.subscriptionToken = subscriptionToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/simple-subject-observer/lib/subscription-token.js\n// module id = ./node_modules/simple-subject-observer/lib/subscription-token.js\n// module chunks = app"],"sourceRoot":""}